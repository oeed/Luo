class Basic

	enum Number numbers = {
		ONE = 1,
		TWO = 2,
		THREE = 3,
	}

	property Boolean calledInitialise = false
	property Number initialiseArgsCount
	property String aSetter = "go away"
	property String aGetter = "GO AWAY"
	property String allowsNil aNilable = "hello"
	property String aNonNilable = "hello"
	property Number aNumber = 0

	property String aDefault = "this is a default value"
	property String aPlainValue = "hello"

	property {String} allowsNil stringTable
	property { String = Number } allowsNil stringNumberTable

	set aSetter(aSetter)
		self.aSetter = aSetter:upper()
	end

	get aGetter()
		return self.aGetter:lower()
	end

	function String aFunction(String first, String second, third)
		return first .. second .. third
	end

	function String aSuperFunction(String first, String second, third)
		return first .. second .. tostring(third)
	end

	function initialise(...)
		self.calledInitialise = true
		self.initialiseArgsCount = #{...}
	end

end

class Child extends Basic
	
	default aDefault = "a new default"

	get aGetter()
		return super()
	end

	function String aSuperFunction(String first)
		return super(first:upper(), "extra", 7)
	end

end